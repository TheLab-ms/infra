apiVersion: v1
kind: Service
metadata:
  name: prom
spec:
  type: ClusterIP
  selector:
    app: prom
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 9090

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prom

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prom
subjects:
  - kind: ServiceAccount
    name: prom
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prom
  labels:
    app: prom
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: prom
  template:
    metadata:
      labels:
        app: prom
    spec:
      serviceAccountName: prom
      securityContext:
        runAsUser: 0
        runAsGroup: 0
      containers:
        - name: prom
          image: prometheus
          command:
            - prometheus
            - --storage.tsdb.path=/durable
            - --storage.tsdb.retention.time=1d
          volumeMounts:
            - name: storage
              mountPath: /durable
            - name: conf
              mountPath: /prometheus/prometheus.yml
              subPath: prometheus.yml
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 5
            httpGet:
              path: /-/ready
              port: 9090
      volumes:
        - name: storage
          hostPath:
            path: /opt/prom
        - name: conf
          configMap:
            name: prom-config

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter
spec:
  selector:
    matchLabels:
      app: node-exporter
  template:
    metadata:
      labels:
        app: node-exporter
      annotations:
        prometheus.io/port: "9100"
        prometheus.io/path: /metrics
        prometheus.io/scrape: "true"
    spec:
      containers:
        - args:
            - --path.sysfs=/host/sys
            - --path.rootfs=/host/root
            - --no-collector.wifi
            - --no-collector.hwmon
            - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
            - --collector.netclass.ignored-devices=^(veth.*)$
          name: node-exporter
          image: prom-node-exporter
          volumeMounts:
            - mountPath: /host/sys
              mountPropagation: HostToContainer
              name: sys
              readOnly: true
            - mountPath: /host/root
              mountPropagation: HostToContainer
              name: root
              readOnly: true
      volumes:
        - hostPath:
            path: /sys
          name: sys
        - hostPath:
            path: /
          name: root

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mikrotik-exporter
  labels:
    app: mikrotik-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mikrotik-exporter
  template:
    metadata:
      labels:
        app: mikrotik-exporter
      annotations:
        prometheus.io/port: "49090"
        prometheus.io/path: /metrics
        prometheus.io/scrape: "true"
    spec:
      containers:
        - name: mikrotik-exporter
          image: prom-mikrotik-exporter
          volumeMounts:
            - name: conf
              mountPath: /home/mktxp/mktxp
      volumes:
        - name: conf
          configMap:
            name: mikrotik-exporter-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mikrotik-exporter-config
data:
  _mktxp.conf: |
    [MKTXP]
        port = 49090
        socket_timeout = 2

        initial_delay_on_failure = 120
        max_delay_on_failure = 900
        delay_inc_div = 5

        bandwidth = False
        bandwidth_test_interval = 600
        minimal_collect_interval = 5

        verbose_mode = False

        fetch_routers_in_parallel = False
        max_worker_threads = 5
        max_scrape_duration = 10
        total_max_scrape_duration = 30

  mktxp.conf: |
    [Router]
        enabled = True

        hostname = 10.200.1.1
        port = 8728

        username = prometheus-exporter
        password = doesnotmatter # this is locked down to read only access from the server's IP - safe enough to commit in plain text

        use_ssl = False
        no_ssl_certificate = False
        ssl_certificate_verify = False

        installed_packages = False
        dhcp = False
        dhcp_lease = False

        connections = True
        connection_stats = False
        pool = False
        interface = True
        firewall = False
        ipv6_firewall = False
        ipv6_neighbor = False
        poe = False
        monitor = False
        netwatch = False
        public_ip = False
        route = False
        wireless = True
        wireless_clients = True
        capsman = True
        capsman_clients = True
        user = False
        queue = True
        remote_dhcp_entry = None
        use_comments_over_names = True
        check_for_updates = False
