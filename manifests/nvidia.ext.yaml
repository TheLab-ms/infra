apiVersion: node.k8s.io/v1
kind: RuntimeClass
metadata:
  name: nvidia
handler: nvidia

---

# apiVersion: v1
# kind: Pod
# metadata:
#   name: nbody-gpu-benchmark
#   namespace: default
# spec:
#   restartPolicy: OnFailure
#   runtimeClassName: nvidia
#   tolerations:
#   - key: specialPodsOnly
#     operator: Exists
#     effect: NoSchedule
#   containers:
#   - name: cuda-container
#     image: nvcr.io/nvidia/k8s/cuda-sample:nbody
#     args: ["nbody", "-gpu", "-benchmark"]
#     resources:
#       limits:
#         nvidia.com/gpu: 1
#     env:
#     - name: NVIDIA_VISIBLE_DEVICES
#       value: all
#     - name: NVIDIA_DRIVER_CAPABILITIES
#       value: all

---

# Copyright (c) 2019, NVIDIA CORPORATION.  All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nvidia-device-plugin-daemonset
spec:
  selector:
    matchLabels:
      name: nvidia-device-plugin-ds
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: nvidia-device-plugin-ds
    spec:
      # Mark this pod as a critical add-on; when enabled, the critical add-on
      # scheduler reserves resources for critical add-on pods so that they can
      # be rescheduled after a failure.
      # See https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
      priorityClassName: "system-node-critical"
      containers:
      - image: nvcr.io/nvidia/k8s-device-plugin:v0.14.3
        name: nvidia-device-plugin-ctr
        env:
          - name: FAIL_ON_INIT_ERROR
            value: "false"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
        volumeMounts:
        - name: device-plugin
          mountPath: /var/lib/kubelet/device-plugins
      volumes:
      - name: device-plugin
        hostPath:
          path: /var/lib/kubelet/device-plugins

      # Below this was added and not part of the upstream manifest
      runtimeClassName: nvidia
      nodeSelector:
        kubernetes.io/hostname: "supermicro2"
      tolerations:
      - key: specialPodsOnly
        operator: Exists
        effect: NoSchedule
