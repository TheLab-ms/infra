apiVersion: apps/v1
kind: Deployment
metadata:
  name: frigate
  labels:
    app: frigate
  annotations:
    oauth-sidecar: "yes"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: frigate
  template:
    metadata:
      labels:
        app: frigate
    spec:
      # nodeName: supermicro1
      # runtimeClassName: nvidia

      containers:
        - name: oauth2proxy
          env:
            - name: OAUTH2_PROXY_UPSTREAMS
              value: "http://127.0.0.1:5000"
            - name: OAUTH2_PROXY_REDIRECT_URL
              value: "https://frigate.apps.thelab.ms/oauth2/callback"
            - name: OAUTH2_PROXY_ALLOWED_GROUPS
              value: "thelab-leadership"

        - name: frigate
          image: frigate
          volumeMounts:
            - name: cache
              mountPath: /tmp/cache
            - name: devshm
              mountPath: /dev/shm
            - name: media
              mountPath: /media/frigate
            - name: config
              mountPath: /config/config.yml
              subPath: frigate.yml
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 5
            httpGet:
              path: /api/
              port: 5000
          # resources:
          #   limits:
          #     nvidia.com/gpu: "1"

      volumes:
        - name: cache
          emptyDir:
            medium: Memory
            sizeLimit: 1G
        - name: devshm
          emptyDir:
            medium: Memory
            sizeLimit: 1G
        - name: media
          hostPath:
            path: /opt/frigate
        - name: config
          configMap:
            name: frigate-config

---
apiVersion: v1
kind: Service
metadata:
  name: frigate
spec:
  type: ClusterIP
  selector:
    app: frigate
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8880

---
apiVersion: v1
kind: Service
metadata:
  name: frigate-unauthenticated
spec:
  type: ClusterIP
  selector:
    app: frigate
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 5000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frigate-exporter
  labels:
    app: frigate-exporter
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: frigate-exporter
  template:
    metadata:
      labels:
        app: frigate-exporter
    spec:
      containers:
        - name: frigate-exporter
          image: ghcr.io/thelab-ms/frigate-exporter:main-8bf970e
          env:
            - name: POSTGRES_HOST
              value: "psql-reporting.default.svc.cluster.local"
            - name: FRIGATE_URL
              value: http://frigate-unauthenticated.default.svc.cluster.local
            - name: CAMERAS
              value: Vent,Dungeon,Atrium,Woodshop,Classroom
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: reporting-psql
                  key: password

---
apiVersion: projectcontour.io/v1
kind: HTTPProxy
metadata:
  name: frigate
spec:
  virtualhost:
    fqdn: frigate.apps.thelab.ms
    rateLimitPolicy:
      local:
        requests: 50
        unit: second
        burst: 50
    tls:
      secretName: apps-wildcard-cert
  routes:
    - conditions:
        - prefix: /
      services:
        - name: frigate
          port: 80
      enableWebsockets: true
